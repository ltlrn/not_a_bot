name: bot workflow

on: push

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
          
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2

        with:
          python-version: 3.11
      
      - name: Start PostgreSQL
        run: |
          sudo systemctl start postgresql.service

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/requirements.txt

      - name: Test with flake8 and Django tests
        run: |
          python -m flake8


  build_and_push_to_docker_hub:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push back to Docker Hub
        uses: docker/build-push-action@v2
          
        with:
          push: true
          context: ./backend/
          tags: ${{ secrets.DOCKER_USERNAME }}/bot-api:latest

      - name: Build and push bot to Docker Hub
        uses: docker/build-push-action@v2
          
        with:
          push: true
          context: ./bot/
          tags: ${{ secrets.DOCKER_USERNAME }}/not-a-bot:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master

        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /var/www/backend/not_a_bot/infra/
            sudo docker-compose stop
            sudo docker rm bot_api
            sudo docker rm bot_body
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/bot-api:latest
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/not-a-bot:latest
            sudo docker-compose up -d --build

            data >> update_log.txt
